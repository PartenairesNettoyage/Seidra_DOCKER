version: "3.9"
services:
  reverse-proxy:
    image: nginx:1.25-alpine
    volumes:
      - ../nginx/ultimate.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    env_file:
      - ../../.env
    environment:
      - SEIDRA_ENV=production
      - SEIDRA_DEBUG=false
      - SEIDRA_ALLOW_SYSTEM_FALLBACK=false
    restart: unless-stopped
    depends_on:
      - redis
      - minio
      - postgres
  worker:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    command: celery -A workers.celery_app worker --loglevel=info
    env_file:
      - ../../.env
    depends_on:
      - redis
      - minio
      - postgres
  beat:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    command: celery -A workers.celery_app beat --loglevel=info
    env_file:
      - ../../.env
    depends_on:
      - redis
      - minio
      - postgres
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=/api
    restart: unless-stopped
  redis:
    image: redis:7-alpine
    restart: unless-stopped
  minio:
    image: minio/minio:RELEASE.2023-11-20T22-40-07Z
    command: server /data --console-address :9001
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: seidra
      POSTGRES_USER: seidra
      POSTGRES_PASSWORD: seidra
    volumes:
      - pg-data:/var/lib/postgresql/data
volumes:
  minio-data:
  pg-data:
